@layer utilities {
  .prose {
    --offset: 1rem;
    text-wrap: pretty;

    & > * + * {
      margin-block-start: var(--offset);
    }

    & *:is(h1, h2, h3, h4, h5, h6) {
      font-weight: 600;
    }

    & * + h1 {
      margin-block-start: calc(var(--offset) * 4);
    }

    & h1 + p {
      margin-block-start: calc(var(--offset) / 2);
    }

    & * + h2 {
      margin-block-start: calc(var(--offset) * 3);
    }

    & h2 + p {
      margin-block-start: calc(var(--offset) / 2);
    }

    & * + h3 {
      margin-block-start: calc(var(--offset) * 2);
    }

    & * + h3 + p {
      margin-block-start: calc(var(--offset) / 2);
    }

    & :is(img, video) {
      border-radius: 6px;
      overflow: hidden;
      height: auto;
    }

    & figcaption {
      text-align: center;
      font-size: 0.875rem;
      color: var(--text-secondary);
      padding: 0.375rem;
    }

    & strong {
      font-weight: 600;
    }

    /* Proper spacing for lists */
    & *:is(ul, ol) {
      padding: 0;
      padding-inline-start: 3ch;
      margin-block-start: calc(var(--offset) / 2);

      & > li {
        margin-block-start: calc(var(--offset) / 2);
      }
    }

    /* different list style for nested lists */
    & ol ol {
      list-style-type: lower-alpha;
    }

    /* code in the text */
    & *:is(p, li, summary) > code {
      background: var(--bg-layer-1);
      padding: 0.25em 0.4em;
      border-radius: 4px;
    }

    /* code inside a link */
    & a > code {
      background: var(--bg-layer-1);
      padding: 0.25em 0.4em;
      border-radius: 4px;
    }

    /* aside is used for a callout component inside the prose */
    & aside {
      background: var(--bg-layer-1);
      padding: 0.75rem 1rem 0.875rem;
      border-radius: 6px;
    }

    /* Links */
    & a[data-rac] {
      outline: 0;
      color: var(--text-highlight);
      text-decoration: none;
      transition: 200ms ease-out;
      transition-property: color opacity;
      transform-origin: center;

      &[data-hovered] {
        transition-duration: 80ms;
        color: var(--text-highlight-hovered);
        text-decoration: underline;
      }

      &[data-pressed] {
        opacity: 0.8;
        transition-duration: 80ms;
      }

      & svg {
        color: var(--icon-highlight);
      }

      &[data-focus-visible] {
        outline: var(--highlight) auto 2px;
      }
    }

    /* Link that go to external sites have an icon */
    & a[target="_blank"] svg {
      display: inline;
      transform: translateY(0.1em);
      margin-inline-start: 0.1em;
    }

    & blockquote {
      padding: 0.25rem 1rem;
      position: relative;

      &::before {
        content: "";
        position: absolute;
        inset-block-start: 0;
        inset-inline-start: 0;
        width: 4px;
        height: 100%;
        border-radius: 999px;
        display: block;
        pointer-events: none;
        background: var(--highlight);
      }
    }

    & .disclosure {
      display: grid;
    }

    & .disclosure-button {
      appearance: none;
      background-color: var(--bg);
      justify-self: flex-start;
      border: 0;
      color: inherit;
      padding: 0.375rem 0.5rem;
      margin: -0.5rem;
      display: flex;
      align-items: center;
      justify-content: flex-start;
      text-align: left;
      gap: 0.5rem;
      outline: 0;
      cursor: pointer;
      border-radius: 6px;
      transition: 200ms ease-out;
      transition-property: background-color transform;
      transform-origin: center;

      & code {
        transition: background-color 200ms ease-out;
      }

      &[data-hovered] {
        background-color: var(--bg-hovered);
        transition-duration: 80ms;

        & code {
          transition-duration: 80ms;
          background: var(--bg-layer-2);
        }

        & svg {
          transform: translateY(0px) rotate(-85deg);
        }
      }

      &[data-pressed] {
        background-color: var(--bg-hovered);
        transform: scale(0.99) translateY(1px);
        transition-duration: 80ms;

        & svg {
          transform: translateY(0px) rotate(-80deg);
        }
      }

      &[data-focus-visible] {
        outline: 2px solid var(--highlight);
      }

      & svg {
        color: var(--text-secondary);
        transform: translateY(0px) rotate(-90deg);
        transition: transform 140ms ease-out;
      }
    }

    & .disclosure[data-open] .disclosure-button {
      &[data-hovered] {
        & svg {
          transform: translateY(1px) rotate(-5deg);
        }
      }

      &[data-pressed] {
        & svg {
          transform: translateY(1px) rotate(-10deg);
        }
      }

      & svg {
        transform: translateY(1px) rotate(0deg);
      }
    }

    & .disclosure-panel {
      display: grid;
    }

    & [data-bright-theme] {
      border-radius: 6px;
      border: 1px solid var(--border);

      & code {
        font-size: 0.75rem;
      }
    }
  }

  html:not([data-theme="light"]) .prose [data-bright-theme] {
    border: 0;
  }
}
